<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<title>Model Type Tests</title>
		
		<link href="../Common/Styles/qunit.css" type="text/css" rel="stylesheet" />
		
		<script src="../Common/Scripts/JQuery/jquery-1.3.2.js" type="text/javascript"></script>
		<script src="../Common/Scripts/QUnit/qunit.js" type="text/javascript"></script>
		<script src="../Common/Scripts/Microsoft/MicrosoftAjax.js" type="text/javascript"></script>
		<script src="../Common/Scripts/ExoWeb/exoweb.js" type="text/javascript"></script>
		<script src="../Common/Scripts/ExoWeb/exoweb.model.js" type="text/javascript"></script>
		<script src="../Common/Scripts/QUnit/qunit.ext.js" type="text/javascript"></script>
		<script src="../Common/Scripts/mock-driver.js" type="text/javascript"></script>
		
		<script type="text/javascript">
			var model = new ExoWeb.Model.Model();

			test("Basic", function() {
				var personType = model.addType("Person");

				ok(personType === model.type("Person"), "Type should be retrievable via \"type\" method.");
				ok(personType === window.Person.meta, "Type should be retrievable directly from window object.")
				equals(personType.get_jstype().getName(), "Person", "Class should be registered and name should be the type name");
				equals(personType.get_jstype(), ExoWeb.Model.Model.getJsType("Person"), "Type should be retrievable by name and \"getJsType\" method.");
				ok(personType.get, "Type should have a get method for retrieving instances.")
			});
			
			test("Namespaces", function() {
				var widgetType = model.addType("Foo.Bar.Widget");
				
				ok(widgetType === model.type("Foo.Bar.Widget"), "Type should be retrievable via \"type\" method.");
				ok(widgetType === Foo.Bar.Widget.meta, "Type should be retrievable directly from namespace objects.")
				equals(widgetType.get_jstype().getName(), "Foo.Bar.Widget", "Class should be registered and name should be the type name");
				equals(widgetType.get_jstype(), ExoWeb.Model.Model.getJsType("Foo.Bar.Widget"), "Type should be retrievable by name and \"getJsType\" method.");
				ok(widgetType.get, "Type should have a get method for retrieving instances.")

				// test property chain and type cast
				var personType = ExoWeb.Model.Model.getJsType("Person");
				personType.meta.addProperty({ "name": "Widget", "type": Foo.Bar.Widget });
				var subWidgetType = model.addType("Foo.Bar.SubWidget", Foo.Bar.Widget.meta);
				Foo.Bar.SubWidget.meta.addProperty({ "name": "CustomText", "type": String });
				var customTextChain = ExoWeb.Model.Model.property("this<Foo.Bar.SubWidget>.CustomText", personType);
				ok(customTextChain, "Property Chain should be able to handle a cast expression involving a namespace.");
			});
		</script>
	</head>
	<body xmlns:sys="javascript:Sys" xmlns:dataview="javascript:Sys.UI.DataView" sys:activate="*">
		
		<!-- QUnit Display -->
		<h1 id="qunit-header">Test Results:</h1>
		<h2 id="qunit-banner"></h2>
		<h2 id="qunit-userAgent"></h2>
		<ol id="qunit-tests"></ol>
	</body>
</html>
