//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using ExoGraph;
using ExoGraph.EntityFramework;
using System.ComponentModel.DataAnnotations;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Helpdesk", "FK_Request_AssignedTo", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Helpdesk.User), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Helpdesk.Request), true)]
[assembly: EdmRelationshipAttribute("Helpdesk", "FK_Request_User", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Helpdesk.User), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Helpdesk.Request), true)]
[assembly: EdmRelationshipAttribute("Helpdesk", "FK_Category_ParentCategory", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Helpdesk.Category), "Category1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Helpdesk.Category), true)]
[assembly: EdmRelationshipAttribute("Helpdesk", "FK_Request_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Helpdesk.Category), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Helpdesk.Request), true)]
[assembly: EdmRelationshipAttribute("Helpdesk", "FK_Request_Priority", "Priority", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Helpdesk.Priority), "Request", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Helpdesk.Request), true)]

#endregion

namespace Helpdesk
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RequestModel : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RequestModel object using the connection string found in the 'RequestModel' section of the application configuration file.
        /// </summary>
        public RequestModel() : base("name=RequestModel", "RequestModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RequestModel object.
        /// </summary>
        public RequestModel(string connectionString) : base(connectionString, "RequestModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RequestModel object.
        /// </summary>
        public RequestModel(EntityConnection connection) : base(connection, "RequestModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Priority> Priorities
        {
            get
            {
                if ((_Priorities == null))
                {
                    _Priorities = base.CreateObjectSet<Priority>("Priorities");
                }
                return _Priorities;
            }
        }
        private ObjectSet<Priority> _Priorities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Request> Requests
        {
            get
            {
                if ((_Requests == null))
                {
                    _Requests = base.CreateObjectSet<Request>("Requests");
                }
                return _Requests;
            }
        }
        private ObjectSet<Request> _Requests;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Priorities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPriorities(Priority priority)
        {
            base.AddObject("Priorities", priority);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Requests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequests(Request request)
        {
            base.AddObject("Requests", request);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Helpdesk", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : GraphEntity<RequestModel>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId, global::System.String name)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            category.Name = name;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        public global::System.Int32 CategoryId
        {
            get
            {
                OnPropertyGet("CategoryId");
                return _CategoryId;
            }
            set
            {
                object oldValue = CategoryId;
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
        	          OnPropertySet("CategoryId", oldValue, value);
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        public global::System.String Name
        {
            get
            {
                OnPropertyGet("Name");
                return _Name;
            }
            set
            {
                object oldValue = Name;
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
    	          OnPropertySet("Name", oldValue, value);
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentCategoryId
        {
            get
            {
                OnPropertyGet("ParentCategoryId");
                return _ParentCategoryId;
            }
            set
            {
                object oldValue = ParentCategoryId;
                OnParentCategoryIdChanging(value);
                ReportPropertyChanging("ParentCategoryId");
                _ParentCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentCategoryId");
                OnParentCategoryIdChanged();
    	          OnPropertySet("ParentCategoryId", oldValue, value);
            }
        }
        private Nullable<global::System.Int32> _ParentCategoryId;
        partial void OnParentCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentCategoryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Helpdesk", "FK_Category_ParentCategory", "Category1")]
        public EntityCollection<Category> Category1
        {
            get
            {
                OnPropertyGet("Category1");
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("Helpdesk.FK_Category_ParentCategory", "Category1");
            }
            set
            {
                object oldValue = Category1;
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("Helpdesk.FK_Category_ParentCategory", "Category1", value);
                }
                OnPropertySet("Category1", oldValue, value);
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Helpdesk", "FK_Category_ParentCategory", "Category")]
        public Category Category2
        {
            get
            {
                OnPropertyGet("Category2");
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Helpdesk.FK_Category_ParentCategory", "Category").Value;
            }
            set
            {
                object oldValue = Category2;
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Helpdesk.FK_Category_ParentCategory", "Category").Value = value;
                OnPropertySet("Category2", oldValue, value);
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> Category2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Helpdesk.FK_Category_ParentCategory", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("Helpdesk.FK_Category_ParentCategory", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Helpdesk", "FK_Request_Category", "Request")]
        public EntityCollection<Request> Requests
        {
            get
            {
                OnPropertyGet("Requests");
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("Helpdesk.FK_Request_Category", "Request");
            }
            set
            {
                object oldValue = Requests;
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("Helpdesk.FK_Request_Category", "Request", value);
                }
                OnPropertySet("Requests", oldValue, value);
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Helpdesk", Name="Priority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Priority : GraphEntity<RequestModel>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Priority object.
        /// </summary>
        /// <param name="priorityId">Initial value of the PriorityId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Priority CreatePriority(global::System.Int32 priorityId, global::System.String name)
        {
            Priority priority = new Priority();
            priority.PriorityId = priorityId;
            priority.Name = name;
            return priority;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        public global::System.Int32 PriorityId
        {
            get
            {
                OnPropertyGet("PriorityId");
                return _PriorityId;
            }
            set
            {
                object oldValue = PriorityId;
                if (_PriorityId != value)
                {
                    OnPriorityIdChanging(value);
                    ReportPropertyChanging("PriorityId");
                    _PriorityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PriorityId");
                    OnPriorityIdChanged();
        	          OnPropertySet("PriorityId", oldValue, value);
                }
            }
        }
        private global::System.Int32 _PriorityId;
        partial void OnPriorityIdChanging(global::System.Int32 value);
        partial void OnPriorityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        public global::System.String Name
        {
            get
            {
                OnPropertyGet("Name");
                return _Name;
            }
            set
            {
                object oldValue = Name;
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
    	          OnPropertySet("Name", oldValue, value);
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Helpdesk", "FK_Request_Priority", "Request")]
        public EntityCollection<Request> Requests
        {
            get
            {
                OnPropertyGet("Requests");
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("Helpdesk.FK_Request_Priority", "Request");
            }
            set
            {
                object oldValue = Requests;
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("Helpdesk.FK_Request_Priority", "Request", value);
                }
                OnPropertySet("Requests", oldValue, value);
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Helpdesk", Name="Request")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Request : GraphEntity<RequestModel>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Request object.
        /// </summary>
        /// <param name="requestId">Initial value of the RequestId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Request CreateRequest(global::System.Int32 requestId, global::System.String description)
        {
            Request request = new Request();
            request.RequestId = requestId;
            request.Description = description;
            return request;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        public global::System.Int32 RequestId
        {
            get
            {
                OnPropertyGet("RequestId");
                return _RequestId;
            }
            set
            {
                object oldValue = RequestId;
                if (_RequestId != value)
                {
                    OnRequestIdChanging(value);
                    ReportPropertyChanging("RequestId");
                    _RequestId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RequestId");
                    OnRequestIdChanged();
        	          OnPropertySet("RequestId", oldValue, value);
                }
            }
        }
        private global::System.Int32 _RequestId;
        partial void OnRequestIdChanging(global::System.Int32 value);
        partial void OnRequestIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        private global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        private global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        private global::System.Int32 PriorityId
        {
            get
            {
                return _PriorityId;
            }
            set
            {
                OnPriorityIdChanging(value);
                ReportPropertyChanging("PriorityId");
                _PriorityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriorityId");
                OnPriorityIdChanged();
            }
        }
        private global::System.Int32 _PriorityId;
        partial void OnPriorityIdChanging(global::System.Int32 value);
        partial void OnPriorityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        public global::System.String Description
        {
            get
            {
                OnPropertyGet("Description");
                return _Description;
            }
            set
            {
                object oldValue = Description;
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
    	          OnPropertySet("Description", oldValue, value);
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        private Nullable<global::System.Guid> AssignedToUserId
        {
            get
            {
                return _AssignedToUserId;
            }
            set
            {
                OnAssignedToUserIdChanging(value);
                ReportPropertyChanging("AssignedToUserId");
                _AssignedToUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssignedToUserId");
                OnAssignedToUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _AssignedToUserId;
        partial void OnAssignedToUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnAssignedToUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Helpdesk", "FK_Request_AssignedTo", "aspnet_Users")]
        public User AssignedTo
        {
            get
            {
                OnPropertyGet("AssignedTo");
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Helpdesk.FK_Request_AssignedTo", "aspnet_Users").Value;
            }
            set
            {
                object oldValue = AssignedTo;
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Helpdesk.FK_Request_AssignedTo", "aspnet_Users").Value = value;
                OnPropertySet("AssignedTo", oldValue, value);
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> AssignedToReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Helpdesk.FK_Request_AssignedTo", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Helpdesk.FK_Request_AssignedTo", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Helpdesk", "FK_Request_User", "aspnet_Users")]
        public User User
        {
            get
            {
                OnPropertyGet("User");
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Helpdesk.FK_Request_User", "aspnet_Users").Value;
            }
            set
            {
                object oldValue = User;
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Helpdesk.FK_Request_User", "aspnet_Users").Value = value;
                OnPropertySet("User", oldValue, value);
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Helpdesk.FK_Request_User", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Helpdesk.FK_Request_User", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Helpdesk", "FK_Request_Category", "Category")]
        public Category Category
        {
            get
            {
                OnPropertyGet("Category");
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Helpdesk.FK_Request_Category", "Category").Value;
            }
            set
            {
                object oldValue = Category;
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Helpdesk.FK_Request_Category", "Category").Value = value;
                OnPropertySet("Category", oldValue, value);
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Helpdesk.FK_Request_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("Helpdesk.FK_Request_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Helpdesk", "FK_Request_Priority", "Priority")]
        public Priority Priority
        {
            get
            {
                OnPropertyGet("Priority");
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("Helpdesk.FK_Request_Priority", "Priority").Value;
            }
            set
            {
                object oldValue = Priority;
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("Helpdesk.FK_Request_Priority", "Priority").Value = value;
                OnPropertySet("Priority", oldValue, value);
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Priority> PriorityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("Helpdesk.FK_Request_Priority", "Priority");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Priority>("Helpdesk.FK_Request_Priority", "Priority", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Helpdesk", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : GraphEntity<RequestModel>
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static User CreateUser(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            User user = new User();
            user.ApplicationId = applicationId;
            user.UserId = userId;
            user.UserName = userName;
            user.LoweredUserName = loweredUserName;
            user.IsAnonymous = isAnonymous;
            user.LastActivityDate = lastActivityDate;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        public global::System.Guid ApplicationId
        {
            get
            {
                OnPropertyGet("ApplicationId");
                return _ApplicationId;
            }
            set
            {
                object oldValue = ApplicationId;
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
    	          OnPropertySet("ApplicationId", oldValue, value);
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        public global::System.Guid UserId
        {
            get
            {
                OnPropertyGet("UserId");
                return _UserId;
            }
            set
            {
                object oldValue = UserId;
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
        	          OnPropertySet("UserId", oldValue, value);
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        public global::System.String UserName
        {
            get
            {
                OnPropertyGet("UserName");
                return _UserName;
            }
            set
            {
                object oldValue = UserName;
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
    	          OnPropertySet("UserName", oldValue, value);
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        public global::System.String LoweredUserName
        {
            get
            {
                OnPropertyGet("LoweredUserName");
                return _LoweredUserName;
            }
            set
            {
                object oldValue = LoweredUserName;
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
    	          OnPropertySet("LoweredUserName", oldValue, value);
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                OnPropertyGet("MobileAlias");
                return _MobileAlias;
            }
            set
            {
                object oldValue = MobileAlias;
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
    	          OnPropertySet("MobileAlias", oldValue, value);
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                OnPropertyGet("IsAnonymous");
                return _IsAnonymous;
            }
            set
            {
                object oldValue = IsAnonymous;
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
    	          OnPropertySet("IsAnonymous", oldValue, value);
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [Required]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                OnPropertyGet("LastActivityDate");
                return _LastActivityDate;
            }
            set
            {
                object oldValue = LastActivityDate;
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
    	          OnPropertySet("LastActivityDate", oldValue, value);
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Helpdesk", "FK_Request_AssignedTo", "Request")]
        public EntityCollection<Request> Assignments
        {
            get
            {
                OnPropertyGet("Assignments");
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("Helpdesk.FK_Request_AssignedTo", "Request");
            }
            set
            {
                object oldValue = Assignments;
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("Helpdesk.FK_Request_AssignedTo", "Request", value);
                }
                OnPropertySet("Assignments", oldValue, value);
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Helpdesk", "FK_Request_User", "Request")]
        public EntityCollection<Request> Requests
        {
            get
            {
                OnPropertyGet("Requests");
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Request>("Helpdesk.FK_Request_User", "Request");
            }
            set
            {
                object oldValue = Requests;
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Request>("Helpdesk.FK_Request_User", "Request", value);
                }
                OnPropertySet("Requests", oldValue, value);
            }
        }

        #endregion
    }

    #endregion
    
}
