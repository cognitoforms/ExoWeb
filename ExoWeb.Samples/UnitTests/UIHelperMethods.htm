<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<title>UI Helper Method Tests</title>
		<script src="../Scripts/JQuery/jquery-1.3.2.js" type="text/javascript"></script>
		<link href="../Styles/QUnit/qunit.css" type="text/css" rel="stylesheet" />
		<script src="../Scripts/QUnit/qunit.js" type="text/javascript"></script>
		<script src="../Scripts/MsAjax/MicrosoftAjax.debug.js" type="text/javascript"></script>
		<script src="../Scripts/MsAjax/MicrosoftAjaxTemplates.debug.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.model.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.mapper.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.view.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.ui.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.mock.js" type="text/javascript"></script>
		<script src="../Scripts/mock-driver.js" type="text/javascript"></script>
		<script type="text/javascript">
			var model = $model({ driver: { id: "1", from: "Driver", and: ["Owner.Location.Address.State", "Owner.AvailableLocations.Address", "Cars", "Dealer", "Dealer.AvailableCars"]} });
			
			// for some reason explicit initialization and placeholder test (in order) enable asynchronous tests
			init();
			test("TODO: Placeholder Test", function() { });
			
			var renderedDataViews = 0;
			function renderComplete() {
				if (++renderedDataViews == 4) {
				
					test("Single hop with lone objects bound to parent dataview", function() {
						var result = window.results["test1"];
						ok(result, "Result should be defined.");
						ok(result instanceof Dealer, "Result should be a Dealer");
					});

					test("Double hop with lone objects bound to parent dataview", function() {
						var result = window.results["test2"];
						ok(result, "Result should be defined");
						ok(result instanceof Driver, "Result should be a Driver");
					});

					test("Single hop with list of objects bound to parent dataview", function() {
						var result1 = window.results["test3-0"];
						ok(result1, "Result 1 should be defined");
						ok(result1.meta.type == OwnerLocation.meta, "Result1 should be an OwnerLocation");
						equals(result1.meta.id, 1, "Result1's id should be 1");

						var result2 = window.results["test3-1"];
						ok(result2, "Result2 should be defined");
						ok(result2.meta.type == OwnerLocation.meta, "Result2 should be an OwnerLocation");
						equals(result2.meta.id, 2, "Result2's id should be 2");
					});
					
				}
			}

			var results = [];
			function saveResult(testName, result) {
				results[testName] = result;
				return result;
			}
		</script>
	</head>
	<body xmlns:sys="javascript:Sys" xmlns:dataview="javascript:Sys.UI.DataView" xmlns:content="javascript:ExoWeb.UI.Content"
		xmlns:template="javascript:ExoWeb.UI.Template" sys:activate="*">
		
		<!-- QUnit Display -->
		<h1 id="qunit-header">Test Results:</h1>
		<h2 id="qunit-banner"></h2>
		<h2 id="qunit-userAgent"></h2>
		<ol id="qunit-tests"></ol>
		
		<div class="sys-template" sys:attach="dataview" dataview:data="{~ model.driver }" dataview:onrendered="{{ renderComplete }}">
			<h3>{ binding Name }</h3>
			<div class="sys-template" sys:attach="dataview" dataview:data="{ binding Dealer }" dataview:onrendered="{{ renderComplete }}">
				<div>Dealer: <span>{{ Name }}</span></div>
				<br />
				
				Available Cars:
				<ul class="sys-template" sys:attach="dataview" dataview:data="{{ saveResult('test1', $parentContextData($element)).AvailableCars }}" dataview:onrendered="{{ renderComplete }}">
					<li>Car <span>{{ $dataItem.meta.id }}</span></li>
				</ul>
				
				Driver's Cars:
				<ul class="sys-template" sys:attach="dataview" dataview:data="{{ saveResult('test2', $parentContextData($element, $index, 2)).Cars }}" dataview:onrendered="{{ renderComplete }}">
					<li>Car <span>{{ $dataItem.meta.id }}</span></li>
				</ul>
				
			</div>
			
			Owner's Locations:
			<ul class="sys-template" sys:attach="dataview" dataview:data="{~ Owner.AvailableLocations }" dataview:onrendered="{{ renderComplete }}">
				<li>
					Available Location - 
					<span class="sys-template" sys:attach="dataview" dataview:data="{{ saveResult('test3-' + $index, $parentContextData($element, $index)).Address }}">
						{{ State.Name }}
					</span>
				</li>
			</ul>
		</div>
	</body>
</html>
