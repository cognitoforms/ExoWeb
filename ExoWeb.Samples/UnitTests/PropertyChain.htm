<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<title>Property Chain Tests</title>
		<script src="../Scripts/JQuery/jquery-1.3.2.js" type="text/javascript"></script>
		<link href="../Styles/QUnit/qunit.css" type="text/css" rel="stylesheet" />
		<script src="../Scripts/QUnit/qunit.js" type="text/javascript"></script>
		<script src="../Scripts/MsAjax/MicrosoftAjax.debug.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.js" type="text/javascript"></script>
		<script src="Common/exoweb.qunit.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.model.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.mapper.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.mock.js" type="text/javascript"></script>
		<script src="../Scripts/mock-driver.js" type="text/javascript"></script>
		<script type="text/javascript">
			var ctx = ExoWeb.context({ model: { driver: { id: "1", from: "Driver", and: ["this.Owner.Location.Address.State", "this.Cars", "this.Dealer", "this.Dealer.AvailableCars"]} } });

			setupTest("test1", { description: "Simple Chain Tests", expect: 5 }, function(chain) {
				equals(3, chain.all().length, "Chain is 3-parts (\"Owner.Location.Address\").");
				ok(chain instanceof ExoWeb.Model.PropertyChain, "chain is of type PropertyChain.");

				var addressProp = chain.lastProperty();
				ok(addressProp, "lastProperty() result is defined.");
				ok(addressProp instanceof ExoWeb.Model.Property, "lastProperty() result is of type Property.");
				equals("Address", addressProp.get_name(), "lastProperty() result name is \"Address\".");
			});

			setupTest("test2", { description: "Value Tests", expect: 1 }, function(chain) {
				var address = chain.value(ctx.model.driver);
				ok(address instanceof LocationAddress, "Value is of type Address.");
			});

			setupTest("test3", { description: "Target Tests", expect: 1 }, function(chain) {
				var loc = chain.lastTarget(ctx.model.driver);
				ok(loc instanceof OwnerLocation, "Target is an OwnerLocation.");
			});

			setupTest("test4", { description: "Extend Chain Tests", expect: 3 }, function(chain) {
				var address = chain.value(ctx.model.driver);
				ok(address instanceof LocationAddress, "address is a LocationAddress");

				chain.append(address.meta.type.property("State.Abbreviation"));
				equals(5, chain.all().length, "chain length should be 5 after appending \"State.Abbreviation\".");

				var abbrev = chain.value(ctx.model.driver);

				equals(String, abbrev.constructor, "Abbreviation should return a string.");
			});

			timeoutTests(2000);
			
			ctx.model.ready(function() {
				var chain = ctx.model.driver.meta.type.property("Owner.Location.Address");

				executeTest("test1", chain);
				executeTest("test2", chain);
				executeTest("test3", chain);
				executeTest("test4", chain);
			});
		</script>
	</head>
	<body xmlns:sys="javascript:Sys" xmlns:dataview="javascript:Sys.UI.DataView" sys:activate="*">
		
		<!-- QUnit Display -->
		<h1 id="qunit-header">Test Results:</h1>
		<h2 id="qunit-banner"></h2>
		<h2 id="qunit-userAgent"></h2>
		<ol id="qunit-tests"></ol>
	</body>
</html>
