<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<title>Property Chain Tests</title>
		<script src="../Scripts/JQuery/jquery-1.3.2.js" type="text/javascript"></script>
		<link href="../Styles/QUnit/qunit.css" type="text/css" rel="stylesheet" />
		<script src="../Scripts/QUnit/qunit.js" type="text/javascript"></script>
		<script src="../Scripts/MsAjax/MicrosoftAjax.debug.js" type="text/javascript"></script>
		<script src="../Scripts/MsAjax/MicrosoftAjaxTemplates.debug.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.model.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.mapper.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.view.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.ui.js" type="text/javascript"></script>
		<script src="../Scripts/ExoWeb/exoweb.mock.js" type="text/javascript"></script>
		<script src="../Scripts/mock-driver.js" type="text/javascript"></script>
		<script type="text/javascript">
			var model = $model({ driver: { id: "1", from: "Driver", and: ["Owner.Location.Address.State", "Cars", "Dealer", "Dealer.AvailableCars"]} });

			// for some reason explicit initialization and placeholder test (in order) enable asynchronous tests
			init();
			test("TODO: Placeholder Test", function() { });

			model.ready(function() {

				var driver = new Driver("1");

				var chain = driver.meta.type.property("Owner.Location.Address");

				test("Simple Chain Tests", function() {
					equals(3, chain.all().length, "Chain is 3-parts (\"Owner.Location.Address\").");
					ok(chain instanceof ExoWeb.Model.PropertyChain, "chain is of type PropertyChain.");

					var addressProp = chain.lastProperty();
					ok(addressProp, "lastProperty() result is defined.");
					ok(addressProp instanceof ExoWeb.Model.Property, "lastProperty() result is of type Property.");
					equals("Address", addressProp.get_name(), "lastProperty() result name is \"Address\".");
				});

				test("Value Tests", function() {
					var address = chain.value(driver);
					ok(address instanceof LocationAddress, "Value is of type Address.");
				});

				test("Target Tests", function() {
					// the owner's locations for the given driver
					var loc = chain.lastTarget(driver);
					ok(loc instanceof OwnerLocation, "Target is an OwnerLocation.");
				});

				test("Extend Chain Tests", function() {
					var address = chain.value(driver);
					ok(address instanceof LocationAddress, "address is a LocationAddress");

					chain.append(address.meta.type.property("State.Abbreviation"));
					equals(5, chain.all().length, "chain length should be 5 after appending \"State.Abbreviation\".");

					var abbrev = chain.value(driver);

					equals(String, abbrev.constructor, "Abbreviation should return a string.");
				});
			});
		</script>
	</head>
	<body xmlns:sys="javascript:Sys" xmlns:dataview="javascript:Sys.UI.DataView" xmlns:content="javascript:ExoWeb.UI.Content"
		xmlns:template="javascript:ExoWeb.UI.Template" sys:activate="*">
		
		<!-- QUnit Display -->
		<h1 id="qunit-header">Test Results:</h1>
		<h2 id="qunit-banner"></h2>
		<h2 id="qunit-userAgent"></h2>
		<ol id="qunit-tests"></ol>
	</body>
</html>
