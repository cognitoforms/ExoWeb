<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>Adapter Sample</title>
    <link type="text/css" rel="stylesheet" href="common/styles.css" />
    <style type="text/css">
    td { padding-right: 10px; }
    .hidden { display: none; visibility: hidden; }
    
    .validated {  }
    .validated-some {}

    .validated-some td { background-color: #ffeeee; }

    .validation { font-size: 9pt; font-family: Arial; }
    .validation-none { display: none; }
    .validation-some { color: #ff0000; }

    .guide .validation-none { display: inherit;  color: #669966; font-style:italic; }
    </style>

    <script src="Scripts/JQuery/jquery-1.3.2.js" type="text/javascript"></script>
    <script src="Scripts/MsAjax/MicrosoftAjax.debug.js" type="text/javascript"></script>
    <script src="Scripts/MsAjax/MicrosoftAjaxTemplates.debug.js" type="text/javascript"></script>
    <script src="Scripts/ExoWeb/exoweb.js" type="text/javascript"></script>
    <script src="Scripts/ExoWeb/exoweb.model.js" type="text/javascript"></script>
    <script src="Scripts/ExoWeb/exoweb.mapper.js" type="text/javascript"></script>
    <script src="Scripts/ExoWeb/exoweb.view.js" type="text/javascript"></script>
    <script src="Scripts/ExoWeb/exoweb.ui.js" type="text/javascript"></script>

    <script src="Scripts/ExoWeb/exoweb.mock.js" type="text/javascript"></script>
    <script src="Scripts/mock-driver.js" type="text/javascript"></script>
    <script src="Scripts/changeset.js" type="text/javascript"></script>
    <script src="Scripts/ExoWeb/exoweb.jquery.js" type="text/javascript"></script>
    <script src="Common/styles.js" type="text/javascript"></script>

    <script type="text/javascript">
    	ExoWeb.trace.flags = {
    		rule: true
    	}
    
    	$extend("Car", function(type) {
    		type.formats.$label = ExoWeb.Model.Format.fromTemplate("{Name}");
    	});

    	$extend("Driver", function(type) {
    		type.formats.$label = ExoWeb.Model.Format.fromTemplate("{Name}");
    	});

    	$extend("Dealer", function(type) {
    		type.formats.$label = ExoWeb.Model.Format.fromTemplate("{Name}");
    	});

    	$extend("OwnerLocation", function(type) {
    		type.formats.$label = ExoWeb.Model.Format.fromTemplate("{Name}");
    	});

    	var model = $model({
	    	driver: { id: "1", from: "Driver", and: ["this.Owner.Location.Address.State", "this.Cars", "this.Dealer", "this.Dealer.AvailableCars"] }
    	});

    	model.ready(function() {
    	});

    </script>
</head>
<body xmlns:sys="javascript:Sys" 
		xmlns:dataview="javascript:Sys.UI.DataView" 
		xmlns:mycontrol="javascript:ExoWeb.UI.MyControl" 
		xmlns:field="javascript:ExoWeb.UI.Field" 
		xmlns:content="javascript:ExoWeb.UI.Content" 
		xmlns:template="javascript:ExoWeb.UI.Template"
		sys:activate="*">		

	<h1>Samples:</h1>
	<table>
		<tbody class="sys-template" sys:attach="dataview" dataview:data="{~ model.driver }">
			<tr sys:attach="content" content:data="{@ Name, prefix=Driver }" />
			<tr sys:attach="content" content:data="{@ PhoneNumber, label=Phone Number }" />
			<tr sys:attach="content" content:data="{@ BirthDate, label=Birthday }" />
			<tr sys:attach="content" content:data="{@ Cars }" class="checkboxlist" />
			<tr sys:attach="content" content:data="{@ Dealer }" class="dropdown" />
			<tr sys:attach="content" content:data="{@ Dealer.Name, prefix=Dealer }" />
			<tr sys:attach="content" content:data="{@ Notes }" class="htmlEditor guide" />
		</tbody>
	</table>

	
	<!-------------------------------------------------------------------------
	--	TEMPLATES
	-------------------------------------------------------------------------->
	<table>
		<tr class="sys-template" sys:attach="template" template:for=".never">
			<td>{# Foo }</td>
		</tr>
		<tr class="sys-template" sys:attach="template" template:for="tr.readonlylist">
			<td>
				<span>{ binding prefix }</span>
				<span>{ binding label }</span>:
			</td>
			<td>
				<div class="sys-template" sys:attach="dataview" dataview:data="{ binding rawValue }">
					<span>{~ format=$label }</span>
				</div>
			</td>
		</tr>
		<tr class="sys-template" sys:attach="template" template:for="tr.dropdown">
			<td>
				<span>{ binding prefix }</span>
				<span>{ binding label }</span>:
			</td>
			<td>
				<select class="sys-template" sys:value="{ binding value }"
					sys:attach="dataview" dataview:data="{ binding options }">
					<option sys:value="{ binding value }">{ binding label }</option>
				</select>
			</td>
		</tr>
		<tr class="sys-template validated" sys:attach="template" template:for="tr.checkboxlist">
			<td>{ binding label }
				<div class='validation'></div>
			</td>
			<td>
				<table>
					<tbody class="sys-template" sys:attach="dataview" 
						dataview:data="{ binding options }">
						<tr>
							<td>
								<input type="checkbox" id="option" sys:checked="{ binding selected }" />
								<label for="option">{ binding label }</label>
							</td>
						</tr>
					</tbody>
				</table>
			</td>
		</tr>
		<tr>
			<td colspan="2">
				<div class="sys-template" sys:attach="template" template:for="div.readonlylist">
					<span class="sys-template" sys:attach="dataview" dataview:data="{ binding rawValue }">
						<span sys:if="{{ $index > 0 }}">, </span><span>{~ format=$label}</span>
					</span>
				</div>
			</td>
		</tr>
		<tr class="sys-template" sys:attach="template" template:for="tr.readonly">
			<td>
				<span>{ binding prefix }</span>
				<span>{ binding label }</span>:
			</td>
			<td>
				<span>{ binding value }</span>
				<span>{ binding helptext }</span>
			</td>
		</tr>
		<tr class="sys-template validated" sys:attach="template" template:for="tr.htmlEditor">
			<td>
				<span>{ binding prefix }</span>
				<span>{ binding label }</span>:
				<div class='validation'></div>
			</td>
			<td>
				<textarea sys:value="{ binding value }" rows='4' cols='60'></textarea>
				<span>{ binding helptext }</span>
			</td>
		</tr>

		<tr class="sys-template" sys:attach="template" template:for="tr">
			<td>
				<span>{ binding prefix }</span>
				<span>{ binding label }</span>:
			</td>
			<td>
				<input type="text" sys:value="{ binding value }" />
				<span>{ binding helptext }</span>
			</td>
		</tr>
	</table>
</body>
</html>
