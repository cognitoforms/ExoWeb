<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" >
<head>
    <title>Adapter Sample</title>
    <link type="text/css" rel="stylesheet" href="common/styles.css" />
    <style type="text/css">
    td { padding-right: 10px; }
    .hidden { display: none; visibility: hidden; }
    </style>

	<script type="text/javascript">
		window.onerror = function() {
			var file = arguments[1];
			var line = arguments[2];
			var message = arguments[0];
			
			console.log("[" + file + "] " + line + ": " + message);
		}
	</script>

    <script src="Scripts/JQuery/jquery-1.3.2.js" type="text/javascript"></script>
    <script src="Scripts/MsAjax/MicrosoftAjax.debug.js" type="text/javascript"></script>
    <script src="Scripts/MsAjax/MicrosoftAjaxTemplates.debug.js" type="text/javascript"></script>
    <script src="Scripts/ExoWeb/exoweb.js" type="text/javascript"></script>
    <script src="Scripts/ExoWeb/exoweb.model.js" type="text/javascript"></script>
    <script src="Scripts/ExoWeb/exoweb.mapper.js" type="text/javascript"></script>
    <script src="Scripts/ExoWeb/exoweb.view.js" type="text/javascript"></script>
    <script src="Scripts/ExoWeb/exoweb.ui.js" type="text/javascript"></script>

    <script src="Scripts/ExoWeb/exoweb.mock.js" type="text/javascript"></script>
    <script src="Scripts/mock-driver.js" type="text/javascript"></script>
    <script src="Scripts/changeset.js" type="text/javascript"></script>
    <script src="Scripts/ExoWeb/exoweb.jquery.js" type="text/javascript"></script>
    <script src="Common/styles.js" type="text/javascript"></script>

    <script type="text/javascript">
    	$extend("Car", function(type) {
    		type.formats.$display = ExoWeb.Model.Format.fromTemplate("{Name}");
    	});

    	$extend("Driver", function(type) {
    		type.formats.$display = ExoWeb.Model.Format.fromTemplate("{Name}");
    	});

    	$extend("Dealer", function(type) {
    		type.formats.$display = ExoWeb.Model.Format.fromTemplate("{Name}");
    	});

    	$extend("OwnerLocation", function(type) {
    		type.formats.$display = ExoWeb.Model.Format.fromTemplate("{Name}");
    	});

    	var ctx = ExoWeb.context({
    		model: {
	    		driver: { id: "1", from: "Driver", and: ["this.Owner.Location.Address.State", "this.Cars", "this.Dealer", "this.Dealer.AvailableCars"] }
	    	}
    	});

    	ctx.model.ready(function() {
    		
    	});
    	
    	function add(type) {
    		var d = new type();
    		//$get("allDrivers").control.refresh();
    	}

    	function deleteDriver(id) {
    		if(confirm("Delete " + id + "?"))
    			(new Driver(id)).meta.destroy();
    	}

    	function deleteCommand(sender, args) {
    		var id = args.get_commandArgument();
    		if (confirm("Delete " + id + "?"))
    			(new Driver(id)).meta.destroy();
    	}

//    	$(function() {
//    		$(".model-driver").each(function() {
//    			var dv = new Sys.UI.DataView(this);
//    			dv.set_data(driver);
//    			dv.refresh();
//    		});
//    	});
    </script>
</head>
<body xmlns:sys="javascript:Sys" 
		xmlns:dataview="javascript:Sys.UI.DataView" 
		xmlns:mycontrol="javascript:ExoWeb.UI.MyControl" 
		xmlns:field="javascript:ExoWeb.UI.Field" 
		xmlns:content="javascript:ExoWeb.UI.Content" 
		xmlns:template="javascript:ExoWeb.UI.Template"
		sys:activate="*">		

	<h1>Samples:</h1>
	<table>
		<tbody class="sys-template" sys:attach="dataview" dataview:data="{~ ctx.model.driver }">
			<tr sys:attach="content" content:data="{@ Name, prefix=Driver }" />
			<tr sys:attach="content" content:data="{@ PhoneNumber, label=Phone Number }" />
			<tr sys:attach="content" content:data="{@ BirthDate, label=Birthday }" />
			<tr>
				<td>(( BirthDate )) - simple property access</td>
				<td>{{ BirthDate }}</td>
			</tr>
			<tr sys:attach="content" content:data="{@ Owner.Location, prefix=Owner }" class="dropdown" />
			<tr sys:attach="content" content:data="{@ Dealer.AvailableCars }" class="readonlylist" />
			<tr sys:attach="content" content:data="{@ Cars }" class="checkboxlist" />
			<tr>
				<td>(@ Cars)</td>
				<td>
					<div sys:attach="content" content:data="{@ Cars }" class="readonlylist"></div>
					<span sys:class-hidden="{binding Cars.length}">(none)</span>
				</td>
			</tr>
			<tr>
				<td>(~ Cars, transform=orderBy('Name'))</td>
				<td>
					<ol class="sys-template" sys:attach="dataview" dataview:data="{~ Cars, transform=orderBy('Name')}">
						<li>{{ Name }}</li>
					</ol>
				</td>
			</tr>
			<tr>
				<td>( binding Cars )</td>
				<td>{ binding Cars }</td>
			</tr>
			<tr>
				<td>(~ Name ) - lazy eval on context</td>
				<td>{~ Name }</td>
			</tr>
			<tr>
				<td>(~ ctx.model.driver.Name ) - lazy eval scope chain</td>
				<td>{~ ctx.model.driver.Name }</td>
			</tr>
			<tr sys:attach="content" content:data="{@ Dealer }" class="dropdown" />
			<tr sys:attach="content" content:data="{@ Dealer.Name, prefix=Dealer }" />
		</tbody>
	</table>

<!--	<button onclick='new Driver()'>add driver</button>
	<table>
		<tbody id='allDrivers' class="sys-template" sys:attach="dataview" dataview:data="{{ Driver.All }}" dataview:oncommand='{{ deleteCommand }}'>
		<tr>
			<td>{{meta.id}}</td>
			<td><button sys:command='delete' sys:commandargument='{{meta.id}}'>X</button></td>
			<td><button sys:command='delete' sys:commandargument='{{meta.id}}'>X</button></td>
		</tr>
		</tbody>
	</table>

	<button onclick='new Dealer()'>add dealer</button>
	<table>
		<tbody class="sys-template" sys:attach="dataview" dataview:data="{{ Dealer.All }}">
		<tr>
			<td>{{meta.id}}</td><td><button onclick="deleteDriver(this)">X</button></td>
		</tr>
		</tbody>
	</table>-->
	
	<!-------------------------------------------------------------------------
	--	TEMPLATES
	-------------------------------------------------------------------------->
	<table>
		<tr class="sys-template" sys:attach="template" template:for=".never">
			<td>{# Foo }</td>
		</tr>
		<tr class="sys-template" sys:attach="template" template:for="tr.readonlylist">
			<td>
				<span>{ binding prefix }</span>
				<span>{ binding label }</span>:
			</td>
			<td>
				<div class="sys-template" sys:attach="dataview" dataview:data="{ binding rawValue }">
					<span>{~ format=$display }</span>
				</div>
			</td>
		</tr>
		<tr class="sys-template" sys:attach="template" template:for="tr.dropdown">
			<td>
				<span>{ binding prefix }</span>
				<span>{ binding label }</span>:
			</td>
			<td>
				<select class="sys-template" sys:value="{ binding systemValue }"
					sys:attach="dataview" dataview:data="{ binding options }">
					<option sys:if="{{ $index == 0 }}">-- select --</option>
					<option sys:value="{ binding systemValue }">{ binding displayValue }</option>
				</select>
			</td>
		</tr>
		<tr class="sys-template" sys:attach="template" template:for="tr.checkboxlist">
			<td>{ binding label }</td>
			<td>
				<table>
					<tbody class="sys-template" sys:attach="dataview" 
						dataview:data="{ binding options }">
						<tr>
							<td>
								<input type="checkbox" id="option" sys:checked="{ binding selected }" />
								<label for="option">{ binding displayValue }</label>
							</td>
						</tr>
					</tbody>
				</table>
			</td>
		</tr>
		<tr>
			<td colspan="2">
				<div class="sys-template" sys:attach="template" template:for="div.readonlylist">
					<span class="sys-template" sys:attach="dataview" dataview:data="{ binding rawValue }">
						<span sys:if="{{ $index > 0 }}">, </span><span>{~ format=$display}</span>
					</span>
				</div>
			</td>
		</tr>
		<tr class="sys-template" sys:attach="template" template:for="tr.readonly">
			<td>
				<span>{ binding prefix }</span>
				<span>{ binding label }</span>:
			</td>
			<td>
				<span>{ binding displayValue }</span>
				<span>{ binding helptext }</span>
			</td>
		</tr>
		<tr class="sys-template" sys:attach="template" template:for="tr">
			<td>
				<span>{ binding prefix }</span>
				<span>{ binding label }</span>:
			</td>
			<td>
				<input type="text" sys:value="{ binding systemValue }" />
				<span>{ binding helptext }</span>
			</td>
		</tr>
	</table>
</body>
</html>
