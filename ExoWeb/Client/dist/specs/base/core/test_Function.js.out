Running tests...


dontDoubleUp
=============================================
Running "dontDoubleUp ensures that a function is only called once with a set of arguments"...
---------------------------------------------
suite skipped or empty
=============================================


cached
=============================================
Running "cached stores the value of an operation so that it is performed only once"...
---------------------------------------------
suite passed
=============================================


mixin
=============================================
Running "mixin adds each member of the argument to the function's prototype"...
---------------------------------------------
Running "mixin retains the function's current prototype"...
---------------------------------------------
Running "mixin overwrites existing members"...
---------------------------------------------
suite passed
=============================================


bind
=============================================
Running "bind ensures that the function is called with the argument as the this pointer"...
>> binding to "yes"
>> applying function with "no" as this pointer
>> result: y
---------------------------------------------
suite passed
=============================================


prepare
=============================================
Running "prepare calls the given function with a this pointer and arguments"...
>> setting scope to "bryan" and arguments to ["javascript", "cool"]
>> calling function on "john elway" with arguments ["basketball", "lame"]
>> result: bryan thinks that javascript is cool
---------------------------------------------
suite passed
=============================================


prependArguments
=============================================
Running "prependArguments prepends the given arguments to any function call"...
>> prepending arguments "a", "b"
>> calling with arguments "c", "d"
>> result: a,b,c,d
---------------------------------------------
Running "prependArguments should not share arguments between invocations"...
>> prepending arguments "a", "b"
>> calling with arguments "c", "d"
>> result: 4
>> calling with arguments "e", "f"
>> result: 4
---------------------------------------------
suite passed
=============================================


appendArguments
=============================================
Running "appendArguments appends the given arguments to any function call"...
>> appending arguments "c", "d"
>> calling with arguments "a", "b"
>> result: a,b,c,d
---------------------------------------------
suite passed
=============================================


spliceArguments
=============================================
suite skipped or empty
=============================================


sliceArguments
=============================================
suite skipped or empty
=============================================


mergeFunctions
=============================================
Running "mergeFunctions return undefined if neither function is defined"...
---------------------------------------------
Running "mergeFunctions returns either function if the other is not defined"...
---------------------------------------------
Running "mergeFunctions takes two functions as input and returns a function that will in turn call both"...
---------------------------------------------
Running "mergeFunctions invokes functions with the given "this" and arguments"...
---------------------------------------------
Running "mergeFunctions wraps async functions and only executes merged callback after both have been executed"...
---------------------------------------------
suite passed
=============================================


equals
=============================================
Running "equals returns a function that will compare it's input to the given object for equality"...
---------------------------------------------
suite passed
=============================================


not
=============================================
Running "not inverts the output of the given function"...
---------------------------------------------
suite passed
=============================================


17 specs, 0 failures
