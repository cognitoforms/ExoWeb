<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<title>Parent Context Data Function Tests</title>
		<link href="../Common/Styles/qunit.css" type="text/css" rel="stylesheet" />
		<style type="text/css">.sys-template {display:none;}</style>
		<script type="text/javascript" src="../Common/Scripts/JQuery/jquery-1.3.2.js"></script>
		<script type="text/javascript" src="../Common/Scripts/QUnit/qunit.js"></script>
		<script type="text/javascript" src="../Common/Scripts/Microsoft/MicrosoftAjax.debug.js"></script>
		<script type="text/javascript" src="../Common/Scripts/Microsoft/MicrosoftAjaxTemplates.debug.js"></script>
		<script type="text/javascript" src="../Common/Scripts/ExoWeb/exoweb-msajax.js"></script>
		<script type="text/javascript" src="../Common/Scripts/QUnit/qunit.ext.js"></script>
		<script type="text/javascript" src="../Common/Model/types.js"></script>
		<script type="text/javascript" src="../Common/Model/instances.js"></script>
		<script type="text/javascript">

			// reference the immediate parent dataview's data when that dataview is bound to a single object
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			defineTest("test1", { description: "$parentContextData - Single hop with lone objects bound to parent dataview", expect: 2 }, function(result) {
				ok(result, "Result should be defined.");
				ok(result instanceof Movie, "Result should be a Movie");
			});
			
			// reference an ancestor dataview's data when that dataview is bound to a single object
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////
			defineTest("test2", { description: "$parentContextData - Double hop with lone objects bound to parent dataview", expect: 2 }, function(result) {
				ok(result, "Result should be defined");
				ok(result instanceof Movie, "Result should be a Driver");
			});

			// reference the immediate parent dataview's data when the parent dataview is bound to a list (i.e.: list index)
			////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//			defineTest("test3-0", { description: "$parentContextData - Single hop with list of objects bound to parent dataview - 1", expect: 3 }, function(result) {
//				ok(result, "Result should be defined");
//				ok(result.meta.type == OwnerLocation.meta, "Result should be an OwnerLocation");
//				equals(result.meta.id, 1, "Result's id should be 1");
//			});
//			defineTest("test3-1", { description: "$parentContextData - Single hop with list of objects bound to parent dataview - 2", expect: 3 }, function(result) {
//				ok(result, "Result2 should be defined");
//				ok(result.meta.type == OwnerLocation.meta, "Result should be an OwnerLocation");
//				equals(result.meta.id, 2, "Result's id should be 2");
//			});

			timeoutTests(2000);

			ExoWeb.config.debug = true;

			window.onerror = function(e) {
				timeoutTests(0);
			};

			$exoweb({ model: { movie: { from: "Movie", id: "robin_hood" } } });

		</script>
	</head>
	<body xmlns:sys="javascript:Sys" xmlns:dataview="javascript:Sys.UI.DataView" sys:activate="*">
		
		<!-- QUnit Display -->
		<h1 id="qunit-header">Test Results:</h1>
		<h2 id="qunit-banner"></h2>
		<h2 id="qunit-userAgent"></h2>
		<ol id="qunit-tests"></ol>
		
		<div class="sys-template" sys:attach="dataview" dataview:data="{~ context.model.movie, source=window }">
			<h3>{binding Name}</h3>
			<div>Director: <span>{binding Director.Person.FirstName}</span> <span>{binding Director.Person.LastName}</span></div>
			<br />
				
			Available Cars:
			<ol class="sys-template" sys:attach="dataview" dataview:data="{{ executeTest('test1', $parentContextData($element))[0].get_Roles() }}">
				<li>"<span>{{ $dataItem.get_Name() }}</span>"</li>
			</ol>

			Genres:
			<ul class="sys-template" sys:attach="dataview" dataview:data="{{ $dataItem }}">
				<li class="sys-template" sys:attach="dataview" dataview:data="{{ executeTest('test2', $parentContextData($element, $index, 2))[0].get_Genres() }}"><span>{{ $dataItem.meta.id }}</span><span sys:if="{{ !$isLast(this, $index) }}">, </span></li>
			</ul>
		</div>
	</body>
</html>
