<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<title>Server-side rendering with client-side linking</title>
		<link href="../Common/Styles/qunit.css" type="text/css" rel="stylesheet" />
		<style type="text/css">
			.sys-template {display:none;}
			.server {border-left:1px solid Blue; padding-left:5px;}
			div.roles {clear:both;}
			img.role-photo {float:left; margin:5px 5px 5px 0;}
			div.actor-bio, div.actor-roles {padding:0 15px; margin:5px 0;}
			div.actor-bio {font-style:italic; font-size:small; border-left:1px solid #555;}
			div.actor-roles h5 {padding:0; margin:0;}
			div.actor-name.role-lead {font-weight:bold;}
		</style>
		<script type="text/javascript" src="../Common/Scripts/JQuery/jquery-1.3.2.js"></script>
		<script type="text/javascript" src="../Common/Scripts/QUnit/qunit.js"></script>
		<script type="text/javascript" src="../Common/Scripts/Microsoft/MicrosoftAjax.debug.js"></script>
		<script type="text/javascript" src="../Common/Scripts/Microsoft/MicrosoftAjaxTemplates.debug.js"></script>
		<script type="text/javascript" src="../Common/Scripts/ExoWeb/exoweb-msajax.js"></script>
		<script type="text/javascript" src="../Common/Scripts/QUnit/qunit.ext.js"></script>
		<script type="text/javascript" src="../Common/Model/types.js"></script>
		<script type="text/javascript" src="../Common/Model/instances.js"></script>
		<script type="text/javascript">

			defineTest("initial", {
				description: "initial rendered state",
				expect: 8,
				fn: function() {
					equals($("#client").find(".photo").length, 2, "should start out with 2 images");
					equals($("#client").find(".roles:last-child > div > div.actor-name").length, 4, "should be 4 roles for Batman and Robin");
					equals($("#client").find(".actor-bio:visible").length, 1, "Should be 1 visible actor bio.");
					equals($("#client").find(".actor-bio:visible")[0].innerText, "Russell Ira Crowe (born 7 April 1964) is a New Zealander Australian actor...", "Bio should be Russell Crow's bio.");
					equals($("#server").find(".photo.server").length, 2, "should start out with 2 (server-rendered) images");
					equals($("#server").find(".roles:last-child.server > div > div.actor-name.server").length, 4, "should be 4 (server-rendered) roles for Batman and Robin");
					equals($("#server").find(".actor-bio:visible").length, 1, "Should be 1 visible actor bio.");
					equals($("#server").find(".actor-bio:visible")[0].innerText, "Russell Ira Crowe (born 7 April 1964) is a New Zealander Australian actor...", "Bio should be Russell Crow's bio.");
				}
			});

			defineTest("addRole", {
				description: "verify updated content after adding a role",
				expect: 2,
				setUp: function() {
					Sys.Application.linkElement(document.getElementById("server"), document.getElementById("_t0"));
					var role = new Role({ Actor: Actor.meta.get("russell_crowe"), Movie: Movie.meta.get("batman_and_robin"), Name: "Bane", Order: 9999, Star: false });
					Movie.meta.get("batman_and_robin").get_Roles().add(role);
					Actor.meta.get("russell_crowe").get_Roles().add(role);
				},
				fn: function() {
					equals($("#client").find(".roles:last-child > div > div.actor-name").length, 5, "should now be 5 roles");
					equals($("#server").find(".roles:last-child > div > div.actor-name").length, 5, "should now be 5 roles");
				}
			});

			defineTest("addMovie", {
				description: "verify updated content after adding a movie",
				expect: 3,
				setUp: function() {
					context.model.movies.add(Movie.meta.get("ghostbusters"));
				},
				fn:  function() {
					equals($("#client").find(".photo").length, 3, "should now be 3 images");
					equals($("#server").find(".photo").length, 3, "should start out with 3 images");
					equals($("#server").find(".photo.server").length, 2, "should now be 2 server-rendered images");
				}
			});

			defineTest("changeViaModel", {
				description: "verify updated image src after changing the poster",
				expect: 4,
				setUp: function() {
					Movie.meta.get("robin_hood").set_Name("The Gladiator - Pt. 2");
					Movie.meta.get("robin_hood").set_PosterUrl("../Common/Resources/RobinHood.jpg");
				},
				fn: function() {
					equals($("#client").find("input[type=text]")[0].value, "The Gladiator - Pt. 2", "title should be updated");
					equals($("#client").find(".photo")[0].getAttribute("src"), "../Common/Resources/RobinHood.jpg", "image src should be updated");
					equals($("#server").find("input[type=text]")[0].value, "The Gladiator - Pt. 2", "title should be updated");
					equals($("#server").find(".photo")[0].getAttribute("src"), "../Common/Resources/RobinHood.jpg", "image src should be updated");
				}
			});

			defineTest("changeViaUI", {
				description: "verify two way binding of title",
				expect: 2, 
				setUp: function() {
					var el = $("#server").find("input[type=text][value='The Gladiator - Pt. 2']").val("Robin Hood")[0];
					if (el.fireEvent) { el.fireEvent("onchange"); }
					else if (el.dispatchEvent) {
						var evt = document.createEvent("MutationEvents");
						evt.initEvent("change", false, true);
						el.dispatchEvent(evt);
					}
				},
				fn: function() {
					equals(context.model.movies[0].get_Name(), "Robin Hood", "name should be updated in model");
					equals($("#client").find("input[type=text][value='Robin Hood']").length, 1, "title should be updated in DOM");
				}
			});

			String.prototype.replaceAll = function replaceAll() {
				var str = this, len = str.length;
				do {
					str = String.prototype.replace.apply(str, arguments);
				}
				while(len !== (len = str.length));
				return str;
			};

			defineTest("innerHTML", {
				description: "verify that markup is the same",
				fn: function() {
					var clientMarkup = $("#client")[0].innerHTML
						.trim().replace(/\t+/g, "").replace(/^\s*$/g, "").replaceAll("\n\n", "\n")
						.replace(/ value="([^"])*"/g, "")
						.replace(/ class\=""/g, "");

					var serverMarkup = $("#server")[0].innerHTML
						.trim().replace(/\t+/g, "").replace(/^\s*$/g, "").replaceAll("\n\n", "\n")
						.replace(/ value="([^"])*"/g, "")
						.replace(/server /g, "").replace(/"server"/g, "\"\"")
						.replace(/ class\=""/g, "");

					//console.log(clientMarkup);
					//console.log(serverMarkup);
					equals(clientMarkup, serverMarkup);
				}
			});

			timeoutTests(2000);

			ExoWeb.config.debug = true;

			$exoweb({
				model: { movies: { from: "Movie", ids: ["robin_hood", "batman_and_robin"] } },
				contextReady: function() {
					Movie.meta.get("robin_hood").set_PosterUrl("../Common/Resources/TheMatrix.jpg");
				},
				domReady: function() {
					executeAllTests();
				}
			});
		</script>
	</head>
	<body xmlns:sys="javascript:Sys" xmlns:dataview="javascript:Sys.UI.DataView" xmlns:content="javascript:ExoWeb.UI.Content"
		xmlns:toggle="javascript:ExoWeb.UI.Toggle" xmlns:template="javascript:ExoWeb.UI.Template" sys:activate="*">
		
		<!-- QUnit Display -->
		<h1 id="qunit-header">Test Results:</h1>
		<h2 id="qunit-banner"></h2>
		<h2 id="qunit-userAgent"></h2>
		<ol id="qunit-tests"></ol>

		<div id="_t0" class="sys-template">
			<img class="photo" sys:src="{binding PosterUrl}" height="50" />
			<input type="text" sys:value="{# Name}" />
			<div class="sys-template roles" sys:attach="dataview" dataview:data="{binding Roles}">
				<div sys:attach="content" content:data="{{ $dataItem }}"></div>
			</div>
		</div>
		<table id="content">
			<tbody>
				<tr>
					<td valign="top" width="300">
						<div id="client" class="sys-template" sys:attach="dataview" dataview:data="{~ context.model.movies, source=window }">
							<img class="photo" sys:src="{binding PosterUrl}" height="50" />
							<input type="text" sys:value="{# Name}" />
							<div class="sys-template roles" sys:attach="dataview" dataview:data="{binding Roles}">
								<div sys:attach="content" content:data="{{ $dataItem }}"></div>
							</div>
						</div>
					</td>
					<td valign="top" width="300">
						<div id="server" class="sys-ignore" data-sys-attach="dataview" data-dataview-data="{~ context.model.movies, source=window }" data-sys-tmplidx="0">
							<!--item-->
							<img class="server photo" data-sys-src="{binding PosterUrl}" height="50" src="../Common/Resources/RobinHood.jpg">
							<input type="text" class="server" data-sys-value="{# Name}" value="The Matrix" />
							<div class="server roles" data-sys-attach="dataview" data-dataview-data="{binding Roles}" data-sys-tmplidx="0">
								<!--item-->
								<div data-sys-attach="content" data-content-data="{{ $dataItem }}" data-sys-tcindex="0">
									<div class="server actor-name role-lead">Russell Crowe</div>
									<div class="server toggle-on" data-sys-attach="toggle" data-toggle-on="{binding Actor.BioPreview}" data-toggle-action="render" data-sys-tmplidx="0" data-sys-tcindex="0">
										<div class="actor-bio" data-sys-innerhtml="{binding Actor.BioPreview}"><span data-canvas-width="200">Russell Ira Crowe (born 7 April 1964) is a New Zealander Australian actor...</span></div>
									</div>
									<div class="actor-roles">
										<h5>Known for:</h5>
										<div data-sys-attach="dataview" data-dataview-data="{binding Actor.Roles}" data-sys-tmplidx="2">
											<!--item-->
											<span>Robin Hood</span>
											<!--/item-->
										</div>
									</div>
								</div>
								<!--/item-->

								<!--item-->
								<div data-sys-attach="content" data-content-data="{{ $dataItem }}" data-sys-tcindex="1">
									<div class="server actor-name">Cate Blanchett</div>
									<div class="toggle-off" data-sys-attach="toggle" data-toggle-on="{binding Actor.BioPreview}" data-toggle-action="render" data-sys-tmplidx="0" data-sys-tcindex="1"></div>
									<div class="actor-roles">
										<h5>Known for:</h5>
										<div data-sys-attach="dataview" data-dataview-data="{binding Actor.Roles}" data-sys-tmplidx="2">
											<!--item-->
											<span>Robin Hood</span>
											<!--/item-->
										</div>
									</div>
								</div>
								<!--/item-->

								<!--item-->
								<div data-sys-attach="content" data-content-data="{{ $dataItem }}" data-sys-tcindex="2">
									<div class="server actor-name">Matthew Macfadyen</div>
									<div class="toggle-off" data-sys-attach="toggle" data-toggle-on="{binding Actor.BioPreview}" data-toggle-action="render" data-sys-tmplidx="0" data-sys-tcindex="2"></div>
									<div class="actor-roles">
										<h5>Known for:</h5>
										<div data-sys-attach="dataview" data-dataview-data="{binding Actor.Roles}" data-sys-tmplidx="2">
											<!--item-->
											<span>Robin Hood</span>
											<!--/item-->
										</div>
									</div>
								</div>
								<!--/item-->
							</div>
							<!--/item-->

							<!--item-->
							<img class="server photo" data-sys-src="{binding PosterUrl}" height="50" src="../Common/Resources/BatmanAndRobin.jpg">
							<input type="text" class="server" data-sys-value="{# Name}" value="Batman &amp; Robin" />
							<div class="server roles" data-sys-attach="dataview" data-dataview-data="{binding Roles}" data-sys-tmplidx="0">
								<!--item-->
								<div data-sys-attach="content" data-content-data="{{ $dataItem }}" data-sys-tcindex="0">
									<div class="server actor-name">Arnold Schwarzenegger</div>
									<div class="toggle-off" data-sys-attach="toggle" data-toggle-on="{binding Actor.BioPreview}" data-toggle-action="render" data-sys-tmplidx="0" data-sys-tcindex="0"></div>
									<div class="actor-roles">
										<h5>Known for:</h5>
										<div data-sys-attach="dataview" data-dataview-data="{binding Actor.Roles}" data-sys-tmplidx="2">
											<!--item-->
											<span>Batman & Robin</span>
											<!--/item-->
										</div>
									</div>
								</div>
								<!--/item-->

								<!--item-->
								<div data-sys-attach="content" data-content-data="{{ $dataItem }}" data-sys-tcindex="1">
									<div class="server actor-name role-lead">George Clooney</div>
									<div class="toggle-off" data-sys-attach="toggle" data-toggle-on="{binding Actor.BioPreview}" data-toggle-action="render" data-sys-tmplidx="0" data-sys-tcindex="1"></div>
									<div class="actor-roles">
										<h5>Known for:</h5>
										<div data-sys-attach="dataview" data-dataview-data="{binding Actor.Roles}" data-sys-tmplidx="2">
											<!--item-->
											<span>Batman & Robin</span>
											<!--/item-->
										</div>
									</div>
								</div>
								<!--/item-->

								<!--item-->
								<div data-sys-attach="content" data-content-data="{{ $dataItem }}" data-sys-tcindex="2">
									<div class="server actor-name">Chris O'Donnell</div>
									<div class="toggle-off" data-sys-attach="toggle" data-toggle-on="{binding Actor.BioPreview}" data-toggle-action="render" data-sys-tmplidx="0" data-sys-tcindex="2"></div>
									<div class="actor-roles">
										<h5>Known for:</h5>
										<div data-sys-attach="dataview" data-dataview-data="{binding Actor.Roles}" data-sys-tmplidx="2">
											<!--item-->
											<span>Batman & Robin</span>
											<!--/item-->
										</div>
									</div>
								</div>
								<!--/item-->

								<!--item-->
								<div data-sys-attach="content" data-content-data="{{ $dataItem }}" data-sys-tcindex="3">
									<div class="server actor-name">Uma Thurman</div>
									<div class="toggle-off" data-sys-attach="toggle" data-toggle-on="{binding Actor.BioPreview}" data-toggle-action="render" data-sys-tmplidx="0" data-sys-tcindex="3"></div>
									<div class="actor-roles">
										<h5>Known for:</h5>
										<div data-sys-attach="dataview" data-dataview-data="{binding Actor.Roles}" data-sys-tmplidx="2">
											<!--item-->
											<span>Batman & Robin</span>
											<!--/item-->
										</div>
									</div>
								</div>
								<!--/item-->
							</div>
							<!--/item-->
						</div>
					</td>
				</tr>
			</tbody>
		</table>

		<div class="sys-template" sys:attach="template" template:datatype="Role">
			<div class="actor-name" sys:class-role-lead="{{ $dataItem.get_Lead() }}">{{ $dataItem.get_Actor().get_Person().get_FirstName() + " " + $dataItem.get_Actor().get_Person().get_LastName() }}</div>
			<div class="sys-template" sys:attach="toggle" toggle:on="{binding Actor.BioPreview}" toggle:action="render">
				<div class="actor-bio">{binding Actor.BioPreview}</div>
			</div>
			<div sys:if="{{ false }}">
				<div class="sys-template" sys:attach="dataview" dataview:data="{binding Actor.Roles}">
					<span sys:codebefore="{{ throw 'This should never render because of sys:if!' }}"></span>
				</div>
			</div>
			<div class="actor-roles">
				<h5>Known for:</h5>
				<div class="sys-template" sys:attach="dataview" dataview:data="{binding Actor.Roles}">
					<span>{{ $dataItem.get_Movie().get_Name() }}</span><span sys:if="{{ !$isLast($context.containerElement.control, $index) }}">, </span>
				</div>
			</div>
		</div>
	</body>
</html>
