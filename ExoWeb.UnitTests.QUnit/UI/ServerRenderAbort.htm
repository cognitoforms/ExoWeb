<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
	<head>
		<title>Server-side rendering with client-side linking</title>
		<link href="../Common/Styles/qunit.css" type="text/css" rel="stylesheet" />
		<style type="text/css">
			.sys-template {display:none;}
			.server {border-left:1px solid Blue; padding-left:5px;}
			div.roles {clear:both;}
			div.roles h4, div.roles h5 {padding:0; margin:0;}
			img.role-photo {float:left; margin:5px 5px 5px 0;}
			div.actor-bio {padding:0 15px; margin:5px 0; font-style:italic; font-size:small; border-left:1px solid #555;}
			div.actor-name.role-lead {font-weight:bold;}
		</style>
		<script type="text/javascript" src="../Common/Scripts/JQuery/jquery-1.3.2.js"></script>
		<script type="text/javascript" src="../Common/Scripts/QUnit/qunit.js"></script>
		<script type="text/javascript" src="../Common/Scripts/Microsoft/MicrosoftAjax.debug.js"></script>
		<script type="text/javascript" src="../Common/Scripts/Microsoft/MicrosoftAjaxTemplates.debug.js"></script>
		<script type="text/javascript" src="../Common/Scripts/ExoWeb/exoweb-msajax.js"></script>
		<script type="text/javascript" src="../Common/Scripts/QUnit/qunit.ext.js"></script>
		<script type="text/javascript" src="../Common/Model/types.js"></script>
		<script type="text/javascript" src="../Common/Model/instances.js"></script>
		<script type="text/javascript">

			defineTest("initial", {
				description: "initial rendered state",
				setUp: function() {
					Sys.Application.linkElement(document.getElementById("server"), document.getElementById("_t0"));
				},
				fn: function() {
					equals($("#client").find(".photo").length, 2, "should start out with 2 images");
					equals($("#client").find(".roles:last-child > div > div.actor-name").length, 4, "should be 4 roles for Batman and Robin");
					equals($("#client").find(".roles:last-child > span").length, 4, "should be 4 index elements for roles for Batman and Robin");
					equals($("#client").find(".roles:last-child > span").text(), "0123", "text for index elements for roles for Batman and Robin should be...");
					equals($("#client").find(".roles:last-child > h4").length, 4, "should be 4 billing elements for roles for Batman and Robin");
					equals($("#client").find(".roles:last-child > h4").text(), "Billed #1Billed #2Billed #3Billed #4", "text for billing elements for roles for Batman and Robin should be...");
					equals($("#client").find(".roles:last-child > h5").length, 4, "should be 4 star-lead elements for roles for Batman and Robin");
					equals($("#client").find(".roles:last-child > h5").text(), "StarStar LeadStarStar", "text for star-lead elements for roles for Batman and Robin should be...");
					equals($("#client").find(".actor-bio:visible").length, 1, "Should be 1 visible actor bio.");
					equals($("#client").find(".actor-bio:visible")[0].innerText, "Russell Ira Crowe (born 7 April 1964) is a New Zealander Australian actor...", "Bio should be Russell Crow's bio.");
					equals($("#server").find(".photo.server").length, 2, "should start out with 2 (server-rendered) images");
					equals($("#server").find(".roles:last-child > div > div.actor-name").length, 4, "should be 4 roles for Batman and Robin");
					equals($("#server").find(".roles:last-child.server > div > div.actor-name.server").length, 0, "should be no server-rendered roles for Batman and Robin");
					equals($("#server").find(".roles:last-child > span").length, 4, "should be 4 index elements for roles for Batman and Robin");
					equals($("#server").find(".roles:last-child > span").text(), "0123", "text for index elements for roles for Batman and Robin should be...");
					equals($("#server").find(".roles:last-child > h4").length, 4, "should be 4 billing elements for roles for Batman and Robin");
					equals($("#server").find(".roles:last-child > h4").text(), "Billed #1Billed #2Billed #3Billed #4", "text for billing elements for roles for Batman and Robin should be...");
					equals($("#server").find(".roles:last-child > h5").length, 4, "should be 4 star-lead elements for roles for Batman and Robin");
					equals($("#server").find(".roles:last-child > h5").text(), "StarStar LeadStarStar", "text for star-lead elements for roles for Batman and Robin should be...");
					equals($("#server").find(".actor-bio:visible").length, 1, "Should be 1 visible actor bio.");
					equals($("#server").find(".actor-bio:visible")[0].innerText, "Russell Ira Crowe (born 7 April 1964) is a New Zealander Australian actor...", "Bio should be Russell Crow's bio.");
				}
			});

			defineTest("addRole", {
				description: "verify updated content after adding a role",
				setUp: function() {
					Movie.meta.get("batman_and_robin").get_Roles().add(new Role({ Actor: Actor.meta.get("russell_crowe"), Name: "Bane", Order: 9999, Star: false }));
				},
				fn: function() {
					equals($("#client").find(".roles:last-child > div > div.actor-name").length, 5, "should now be 5 roles");
					equals($("#client").find(".roles:last-child > span").length, 5, "should be 4 index elements for roles for Batman and Robin");
					equals($("#client").find(".roles:last-child > span").text(), "01234", "text for index elements for roles for Batman and Robin should be...");
					equals($("#client").find(".roles:last-child > h4").length, 5, "should be 4 billing elements for roles for Batman and Robin");
					equals($("#client").find(".roles:last-child > h4").text(), "Billed #1Billed #2Billed #3Billed #4Billed #10000", "text for billing elements for roles for Batman and Robin should be...");
					equals($("#client").find(".roles:last-child > h5").length, 5, "should be 4 star-lead elements for roles for Batman and Robin");
					equals($("#client").find(".roles:last-child > h5").text(), "StarStar LeadStarStarSupporting Cast", "text for star-lead elements for roles for Batman and Robin should be...");
					equals($("#server").find(".roles:last-child > div > div.actor-name").length, 5, "should now be 5 roles");
					equals($("#server").find(".roles:last-child > span").length, 5, "should be 4 index elements for roles for Batman and Robin");
					equals($("#server").find(".roles:last-child > span").text(), "01234", "text for index elements for roles for Batman and Robin should be...");
					equals($("#server").find(".roles:last-child > h4").length, 5, "should be 4 billing elements for roles for Batman and Robin");
					equals($("#server").find(".roles:last-child > h4").text(), "Billed #1Billed #2Billed #3Billed #4Billed #10000", "text for billing elements for roles for Batman and Robin should be...");
					equals($("#server").find(".roles:last-child > h5").length, 5, "should be 4 star-lead elements for roles for Batman and Robin");
					equals($("#server").find(".roles:last-child > h5").text(), "StarStar LeadStarStarSupporting Cast", "text for star-lead elements for roles for Batman and Robin should be...");
				}
			});

			timeoutTests(2000);

			ExoWeb.config.debug = true;

			$exoweb({
				model: { movies: { from: "Movie", ids: ["robin_hood", "batman_and_robin"] } },
				contextReady: function() {
					$extend("Role", function() {
						Role.meta.addProperty({ name: "uiOrder", type: Number }).calculated({
							fn: function() {
								return this.get_Order() + 1;
							},
							basedOn: ["this.Order"]
						});

						Role.meta.addProperty({ name: "uiStarLead", type: String }).calculated({
							fn: function() {
								return (this.get_Star() ? "Star" : "") +
									(this.get_Lead() ? (this.get_Star() ? " " : "") + "Lead" : "") +
									(this.get_Star() || this.get_Lead() ? "" : "Supporting Cast");
							},
							basedOn: ["this.Star", "this.Lead"]
						});
					});

					Movie.meta.get("robin_hood").set_PosterUrl("../Common/Resources/TheMatrix.jpg");
				},
				domReady: function() {
					executeAllTests();
				}
			});

		</script>
	</head>
	<body xmlns:sys="javascript:Sys" xmlns:dataview="javascript:Sys.UI.DataView" xmlns:content="javascript:ExoWeb.UI.Content"
		xmlns:toggle="javascript:ExoWeb.UI.Toggle" xmlns:template="javascript:ExoWeb.UI.Template" sys:activate="*">
		
		<!-- QUnit Display -->
		<h1 id="qunit-header">Test Results:</h1>
		<h2 id="qunit-banner"></h2>
		<h2 id="qunit-userAgent"></h2>
		<ol id="qunit-tests"></ol>

		<div id="_t0" class="sys-template">
			<img class="photo" sys:src="{binding PosterUrl}" height="50" />
			<input type="text" sys:value="{# Name}" />
			<div class="sys-template roles" sys:attach="dataview" dataview:data="{binding Roles}">
				<span>{{ $index }}</span>
				<h4>Billed #{{ $dataItem.get_uiOrder() }}</h4>
				<h5>{binding uiStarLead}</h5>
				<div sys:attach="content" content:data="{{ $dataItem }}"></div>
			</div>
		</div>
		<table id="content">
			<tbody>
				<tr>
					<td valign="top" width="300">
						<div id="client" class="sys-template" sys:attach="dataview" dataview:data="{~ context.model.movies, source=window }">
							<img class="photo" sys:src="{binding PosterUrl}" height="50" />
							<input type="text" sys:value="{# Name}" />
							<div class="sys-template roles" sys:attach="dataview" dataview:data="{binding Roles}">
								<span>{{ $index }}</span>
								<h4>Billed #{{ $dataItem.get_uiOrder() }}</h4>
								<h5>{binding uiStarLead}</h5>
								<div sys:attach="content" content:data="{{ $dataItem }}"></div>
							</div>
						</div>
					</td>
					<td valign="top" width="300">
						<div id="server" class="sys-ignore" data-sys-attach="dataview" data-dataview-data="{~ context.model.movies, source=window }" data-sys-tmplidx="0">
							<!--item-->
							<img class="server photo" sys:src="{binding PosterUrl}" height="50">
							<input type="text" class="server" data-sys-value="{# Name}" value="The Matrix" />
							<div class="server roles" data-sys-attach="dataview" data-dataview-data="{binding Roles}" data-sys-tmplidx="0">
								<!--item-->
								<span sys:innerhtml="{{ $index }}"></span>
								<h4>Billed #{{ $dataItem.get_uiOrder() }}</h4>
								<h5>{binding uiStarLead}</h5>
								<div sys:attach="content" content:data="{{ $dataItem }}"></div>
								<!--/item-->

								<!--item-->
								<span sys:innerhtml="{{ $index }}"></span>
								<h4>Billed #{{ $dataItem.get_uiOrder() }}</h4>
								<h5>{binding uiStarLead}</h5>
								<div sys:attach="content" content:data="{{ $dataItem }}"></div>
								<!--/item-->

								<!--item-->
								<span sys:innerhtml="{{ $index }}"></span>
								<h4>Billed #{{ $dataItem.get_uiOrder() }}</h4>
								<h5>{binding uiStarLead}</h5>
								<div sys:attach="content" content:data="{{ $dataItem }}"></div>
								<!--/item-->
							</div>
							<!--/item-->

							<!--item-->
							<img class="server photo" sys:src="{binding PosterUrl}" height="50">
							<input type="text" class="server" data-sys-value="{# Name}" value="Batman &amp; Robin" />
							<div class="server roles" data-sys-attach="dataview" data-dataview-data="{binding Roles}" data-sys-tmplidx="0">
								<!--item-->
								<span sys:innerhtml="{{ $index }}"></span>
								<h4>Billed #{{ $dataItem.get_uiOrder() }}</h4>
								<h5>{binding uiStarLead}</h5>
								<div sys:attach="content" content:data="{{ $dataItem }}"></div>
								<!--/item-->

								<!--item-->
								<span sys:innerhtml="{{ $index }}"></span>
								<h4>Billed #{{ $dataItem.get_uiOrder() }}</h4>
								<h5>{binding uiStarLead}</h5>
								<div sys:attach="content" content:data="{{ $dataItem }}"></div>
								<!--/item-->

								<!--item-->
								<span sys:innerhtml="{{ $index }}"></span>
								<h4>Billed #{{ $dataItem.get_uiOrder() }}</h4>
								<h5>{binding uiStarLead}</h5>
								<div sys:attach="content" content:data="{{ $dataItem }}"></div>
								<!--/item-->

								<!--item-->
								<span sys:innerhtml="{{ $index }}"></span>
								<h4>Billed #{{ $dataItem.get_uiOrder() }}</h4>
								<h5>{binding uiStarLead}</h5>
								<div sys:attach="content" content:data="{{ $dataItem }}"></div>
								<!--/item-->
							</div>
							<!--/item-->
						</div>
					</td>
				</tr>
			</tbody>
		</table>

		<div id="_t1" class="sys-template" sys:attach="template" template:datatype="Role">
			<div class="actor-name" sys:class-role-lead="{{ $dataItem.get_Lead() }}">{{ $dataItem.get_Actor().get_Person().get_FirstName() + " " + $dataItem.get_Actor().get_Person().get_LastName() }}</div>
			<div class="sys-template" sys:attach="toggle" toggle:on="{binding Actor.BioPreview}" toggle:action="render">
				<div class="actor-bio">{binding Actor.BioPreview}</div>
			</div>
		</div>
	</body>
</html>
